[config]
default_to_workspace = false
skip_core_tasks = true

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.clippy]
command = "cargo"
args = ["clippy"]

[tasks.fmt]
command = "cargo"
args = ["fmt", "--all"]

[tasks.docs-html]
command = "cargo"
args = ["doc", "--package", "citadel_sdk", "--features=webrtc,doc-images", "--no-deps", "--release"]

[tasks.pr]
dependencies = ["fmt", "clippy"]

[tasks.install-binstall]
install_crate = { crate_name = "cargo-binstall", binary = "cargo", test_arg = ["binstall", "--help"] }

[tasks.install-nextest]
command = "cargo"
args = ["binstall", "cargo-nextest", "--secure", "-y"]
dependencies = ["install-binstall"]

[tasks.test-local]
command = "cargo"
description = "Tests all available unit/integration tests locally without using SQL/redis backends and appropriate localhost network settings"
env = { "SKIP_EXT_BACKENDS" = "true" }
args = ["nextest", "run", "--features", "localhost-testing"]
dependencies = ["install-nextest"]

[tasks.test]
command = "cargo"
description = "Tests all available unit/integration tests locally using SQL/redis backends and appropriate localhost network settings"
condition = { env_set = [ "TESTING_SQL_SERVER_ADDR_CLIENT", "TESTING_SQL_SERVER_ADDR_SERVER" ], env_not_set = ["SKIP_EXT_BACKENDS"] }
args = ["nextest", "run", "--features", "localhost-testing"]
dependencies = ["install-nextest"]

[tasks.install.mac]
command = "brew"
args = ["install", "llvm@13", "openssl", "cmake"]

[tasks.install.windows]
command = "set"
args = ["OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64"]
dependencies = ["install_deps"]

[tasks.install_deps.windows]
command = "choco"
args = ["install", "-y", "llvm", "openssl", "cmake"]

[tasks.docs]
script_runner = "@rust"
env = { "CARGO_MAKE_RUST_SCRIPT_PROVIDER" = "cargo-script" }
dependencies = ["docs-html"]
script = '''
//! ```cargo
fn main() {
    std::fs::copy(
        "./resources/avarok.png",
        "./target/doc/citadel_sdk/avarok.png",
    )
    .expect("Failed to copy crate logo when building documentation.");
    std::fs::copy(
        "./resources/favicon.png",
        "./target/doc/citadel_sdk/favicon.png",
    )
    .expect("Failed to copy crate favicon when building documentation.");
}
'''

[tasks.install-llvm-tools]
command = "rustup"
args = ["component", "add", "llvm-tools-preview", "--toolchain", "nightly"]

[tasks.install-llvm-cov]
install_crate = { crate_name = "cargo-llvm-cov", binary = "cargo", test_arg = ["llvm-cov", "--help"] }
dependencies = ["install-llvm-tools"]

[tasks.cov]
command = "cargo"
description = "Used to generate coverage information. Add --html (local) or --lcov (pipeline) for an exportable report"
env = { "SKIP_EXT_BACKENDS" = "true" }
args = ["llvm-cov", "nextest", "--features=filesystem,localhost-testing,multi-threaded", "--ignore-filename-regex=\"firebase-rtdb/src/lib.rs|netbeam/src/sync/operations/net_join.rs|netbeam/src/sync/operations/net_select.rs|citadel_sdk/src/test_common.rs|citadel_wire/src/upnp_handler.rs\"", "${@}"]
dependencies = ["install-nextest", "install-llvm-cov"]
