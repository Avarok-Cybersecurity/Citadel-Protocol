searchState.loadedDescShard("citadel_sdk", 0, "Software development kit for creating high performance, …\nConvenience for SDK users\nStore data to the backend using this library …\nConvenience functions for interacting with the remote …\nThe prefabs module contains pre-built kernels for common …\nConvenience import for building applications\nExtension implementations endowed upon the NodeRemote …\nFor easy construction of replies to common message types …\nContains a trait for persisting application-level data in …\nGets a value from the backend\nObtains the K,V map for this application\nRemoves a value from the backend, returning the previous …\nObtains a list of K,V pairs such that <code>needle</code> is a subset …\nStores a value in the backend, either creating or …\nDeletes a file from the Remote Encrypted Virtual Filesystem\nReads a file from the Remote Encrypted Virtual Filesystem\nReads a file from the Remote Encrypted Virtual Filesystem …\nTakes a file from the Remote Encrypted Virtual Filesystem\nTakes a file from the Remote Encrypted Virtual Filesystem …\nWrites a file or BytesSource to the Remote Encrypted …\nWrites a file or BytesSource to the Remote Encrypted …\nA limited version of the <code>NodeRemote</code> designed to only allow …\nKernels for clients Client-Side Network Components\nReturns the argument unchanged.\nObtains a receiver which yields incoming file/object …\nCan only be called once per remote. Allows receiving events\nCalls <code>U::from(self)</code>.\nconstructs a new <code>ClientServerRemote</code> from a …\nKernels for servers Server-Side Network Components\nShared utilities between client and server kernels Shared …\nGracefully closes the protocol and kernel executor\nThe settings for a client-to-server connection\nUsed to instantiate a client to server connection\nShared between the kernel and the on_c2s_channel_received …\nA kernel that assists in creating and/or connecting to a …\nBuilds the client-to-server connection settings\nCreates a new connection to a central server that uses a …\nCreates a new connection to a central server that uses a …\nDisables the UDP mode for the client-to-server connection. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new connection with a central server entailed by …\nA kernel that assists in allowing multiple possible …\nA kernel that only makes a single client-to-server …\nCreates a new connection to a central server that does not …\nSee docs for <code>transient</code>. This function allows you to …\nAdds a pre-shared key to the client-to-server connection. …\nAdds a session security settings to the client-to-server …\nSets the UDP mode for the client-to-server connection\nA kernel that streamlines creating, connecting, and …\nCreate a new group, under owner, with a list of users that …\nBefore running the <code>BroadcastKernel</code>, each peer must send …\nJoin a pre-existing group as local_user that is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAfter establishing a connection to the central node, this …\nAllows easy aggregation of <code>UserIdentifier</code>’s and custom …\nAccepts all incoming file transfer handles and processes …\nAdds the peer\nDisables the UDP mode for the client-to-server connection. …\nEnables the UDP mode for the client-to-server connection. …\nEnsures that the target user is registered before …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds a peer with default connection settings\nAdds a peer with custom settings\nAdds a pre-shared key to the peer session password list. …\nSets the <code>SessionSecuritySettings</code> for this peer to peer …\nSets the <code>UdpMode</code> for this peer to peer connection\nThis <code>SingleClientServerConnectionKernel</code> is the base kernel …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SingleClientServerConnectionKernel</code> with the …\nA kernel that accepts all inbound file transfer requests …\nA kernel that reacts to new channels created, allowing …\nA non-reactive kernel that does no additional processing …\nFor internal services (e.g., a Hyper webserver) Internal …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA kernel that executes a user-provided function each time …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA kernel that does nothing to events in the protocol, nor …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInternal Service Communication Layer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAccept membership in a group\nResponse to accepting membership in a group\nThe default manager for handling the list of users stored …\nAdd members to a group\nResponse to adding members to a group\nArguments for connecting to a node\nUsed when constructing the account manager\nFastest. Meant for high-throughput environments. Each …\nFor passing metadata from a cnac\nA receiver for the tracked callback channel.\nThe connection was a failure\nIf force_login is true, the protocol will disconnect any …\nFor saving the state of client-side connections\nConnection succeeded for the cid self.0. bool is “is …\nImplicated CID, creds, connect mode, ratchets keys, …\nCreate a new group with initial invitees\nResponse to creating a group\nCredentials used for the connection\nWhen de-registration occurs. Third is_personal, Fourth is …\nDecline membership in a group\nResponse to declining membership in a group\nDefault node builder type\nDeletes a file from the remote virtual encrypted filesystem\nFor submitting a de-register request\nDisables header obfuscation (default)\nDenotes that credentials will not be used (passwordless)\nvt-cxn-type is optional, because it may have only been a …\nTells the server to disconnect a session (implicated cid, …\nDisconnected from a group\nEnables header obfuscation to help mitigate some deep …\nDenotes that credentials will be used\nEnables header obfuscation with a specific key. This value …\nAn iterator over the variants of EncryptionAlgorithm\nEnd a group\nResponse to ending a group\nEnsures that if a panic occurs in a task, the panic …\nSynchronization will occur on the filesystem\nFor a converted error\nReturns a list of connected sessions\nEnum representing different types of group broadcast …\nA group-message related command\nFor denoting a channel was created\nfor group-related events. Implicated cid, ticket, group …\nGroup does not exist\nRaw user ID\nNo true synchronization will occur; data is lost between …\nAn internal error occurred.\nAn internal error occurred\nA bad packet\nOccurs when the requested packet size is over the maximum\nA bad external request\nInvitation to join a group\nAn iterator over the variants of KemAlgorithm\nCreates a KernelExecutor\nUsed for fine-tuning parameters within the [<code>KernelExecutor</code>]\nKick members from a group\nResponse to kicking members from a group\nLeave a group\nResponse to leaving a group\nList groups for a user\nResponse to listing groups for a user\nMailbox\nMember state changed\nMessage broadcast to a group\nOptions for creating message groups\nResponse to a message broadcast\nA compact ratchet meant for protocols that require smaller …\nThis is to replace a tuple for greater organization\nThe <code>NetKernel</code> is the thread-safe interface between the …\nThe basic error type for this crate\nUsed to construct a running client/peer or server instance\nAn awaitable future whose return value propagates any …\nallows convenient communication with the server\nfor remote send errors\nThese are sent down the stack into the server. Most of the …\nThis type is for relaying results between the lower-level …\nUsed for determining the proper action when loading the …\nFor file transfers. Implicated CID, Peer/Target CID, …\nUsed to keep track of file transfer progress for either …\nThe outbound request was rejected\nNo credentials/one-time connection\nA client/server behind a residential NAT will choose this …\nA channel was created, with channel_id = ticket (same as …\nA stream interface for receiving secure packets NOTE: on …\nA high-level peer command. Can be used to facilitate …\nPeer result\nContains info about a peer, used for giving the user …\nSlowest, but ensures each packet gets encrypted with a …\nThis is what every C/NAC gets. This gets called before …\nA private group is a group where the group can only be …\nWhen creating credentials, this is required\nA public group is a group where any user registered to the …\nPulls a file from the remote virtual encrypted filesystem\nQuic\nFor allowing registration inside the toolset\nUpdates the entropy_bank for the given CID\nAn error occurred while receiving a response.\nThe registration was a failure\nReturns the CNAC which was created during the registration …\nSends a request to the underlying HdpSessionManager to …\nRequest to join a group\nRequest to join a group is pending\nFor use in the TOML config as well as for during the …\nA memory-secure wrapper for shipping around Bytes\nAn iterator over the variants of SecrecyMode\nProvides the enumeration for all security levels\nAn iterator over the variants of SecurityLevel\nAn error occurred while sending a request.\nSends or updates a file\nA server with a static IP address will choose this option\nMiscellaneous settings for a node serving connections\nPassed to the services handler post-login at the server. …\nA list of running sessions\nshutdown signal\nFor shutdowns\nAn iterator over the variants of SigAlgorithm\nThrown when the underlying socket fails\nA container meant to establish perfect forward secrecy AND …\nA convenience structure for executing commands that depend …\nA reference to a user identifier\nConvenient serialization methods for types that #[…\nUses the transmission control protocol\nA type sent through the server when a request is made\nTimeout occurred for cid self.0\nThe domain\nA tracked callback channel that provides request-response …\nA payload for the tracked callback channel.\nAn error that can occur when using the tracked callback …\nAn iterator over the variants of UdpMode\nA convenience wrapper for passing arguments to functions …\nUsername connected by an unspecified ID\nFor readability\nWhen the local handle type is for a Receiver, the receiver …\nReturns the account manager instance.\nAdds a password to the session password list. Both …\nIf enabled, allows inbound connections to use no …\nThe API key for identification\nReturns a future that represents the both the protocol and …\nConstructs the <code>SessionSecuritySettings</code>\nUses: …\nused to identify this channel in the network\nClient ID\nthe client to which belongs within <code>parent_icid</code>\nthe client to which belongs within <code>parent_icid</code>\nClones the tracked callback channel.\nCompares usernames for equality\nCreates a new persistence handler, connecting to the …\nOnly for client to server conns\nImportant: Assumes UDP NAT traversal has concluded. This …\nDate created\nEnforces specific requirements on credentials\nCredentials used for connecting (registration implied to …\nWhen the local handle type is for a Receiver, the receiver …\nGets all the internal values\ndecrypts using a custom nonce configuration\nDeletes a client by cid. Returns true if a success\nCalled when the server registers the client-provided …\nDeserializes from an owned buffer\nDeserialized a bincode type from a byte vector\nDeserializes in-place\nCreates an unlocked, empty buffer\nno allocation occurs\nEncrypts the data into a Vec\nEnds the group\nThis function is expected to be asynchronously executed …\nExhausts the steam, independently of the orientation If …\nReturns whether the payload expects a response.\nFor requesting the use of the local filesystem as a backend\nConverts a user identifier into its cid\nConverts a user identifier into its cid\nFinds a hyperlan peer for a given user. Returns the …\nFormats the error for debugging.\nPossibly returns the security_level given an input value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert GroupBroadcast to GroupBroadcastPayload\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTry to create Self from the raw representation\nTry to create Self from the raw representation\nTry to create Self from the raw representation\nCreates a new <code>ServerUnderlyingProtocol</code> with a preset …\nCreates a new <code>ServerUnderlyingProtocol</code> with a preset …\nFull name\nThe full name of this peer\nGets the backend type\nReturns the client ID\nGets the CID of this target\nReturns the CNAC with the supplied CID\nReturns the first username detected. This is not advised …\nReturns the default security level\nGets the default security level (will use all available …\nGets domain\nGets full name by CID\nGets a list of hyperlan peers for the given peer\nReturns the message PQC and entropy_bank for the specified …\nReturns the misc settings\nReturns the next constructor options\nReturns the next available ticket.\nGets the CID of the endpoint\nGets the metadata of the virtual connection\nGets user info for all the given CIDs, omitting any …\nReturns a list of impersonal cids\nReturns the scramble entropy_bank\nGets the CID of the local user\nGets username by CID\nReturns the JWebToken\nFor accessing the inner element\nDetermines if any of the ratchets have verified packets\nDetermines if the HyperLAN client is registered Impersonal …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner element without dropping the memory\nInvites a single user to the group\nInvites all listed members to the group\nEven if an error, returns true if the file transfer is done\nReturns true if passwordless\nWhether CNAC is personal\nReturns the group key of the channel\nKicks a peer from the group. User must be owner\nKicks a set of peers from the group. User must be owner\nLeaves the group\nreturns the length of the buffer\nwhen the kernel executes, it will be given a handle to the …\nDecrypts using a local key that is not shared with anyone. …\nEncrypts using a local key that is not shared with anyone. …\nCreates a new KernelExecutor. Panics if the server cannot …\n<code>bind_addr</code>: Required for determining the local save …\nCreates a new tracked callback channel with the given …\nCreates a new payload with the given tracking ID and data.\nCreates a new <code>BackendType</code> given the provided <code>url</code>. Returns …\nGenerates the proper connect credentials. Does NOT trim …\nThe self-signed cert will be created internally …\nGenerates the proper registration credentials. Trims the …\nReturns the next Alice constructor\nWhen the server processes a valid entry, the value is sent …\nAfter the server remote is passed to the kernel, this …\nWhen the system is ready to shutdown, this is called\nDisplay formatter for console applications\nThe interserver cid to which <code>cid</code> belongs to\nSHA’s the password before input into argon\nReturns the payload of the error, if any.\nThe payload data.\nPolls the receiver for the next item.\nProtects a message packet using the entire ratchet’s …\nReturns the number of accounts purged\nforce_use_default_config: if true, this will …\nReceives the file, exhausting the underlying stream and …\nReceives the next element from the channel\nRegisters the two accounts together at the server\nDoes not execute the registration process between two …\nOnce a valid and decrypted stage 4 packet gets received by …\nwhereas the HyperLAN server (Bob) runs …\nResets the anti-replay attack counters\nGoogle’s real time database config\nSearches for the account\nPerforms a search for the current peer given the …\nSends a request with a tracked callback.\nSends a message through the channel\nSends a request to the server and returns a ticket for …\nSends a request to the server and returns a ticket for …\nSends a request to the server and returns a subscription …\nConvenience method for sending and awaiting for a response …\nBroadcasts a message to the group\nSends a request without a tracked callback.\nSends a request to the server with a custom ticket.\nSends a request to the server with a custom ticket.\nSerializes self into a buffer\nSerializes directly into a slice\nSerializes a bincode type to a byte vector\nReturns the expected size of the serialized objects\nReturns a reference to the services handler\nSafely shutsdown the internal server\nIn order to use the PeerChannel properly, split must be …\nSplits the channel in two\nCreates a new <code>ServerUnderlyingProtocol</code> with a random bind …\nTransfers the file, exhausting the underlying stream\nGenerates an empty skeleton for authless mode\nNo credentials will be used for login, only a one-time …\nTries to reply to a tracked request.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe URL to the rtdb instance\nReturns the username or uuid of the client\nUsername\nThe username of this peer\nThe username of this peer\nGenerates a CID given a username\nValidates the credentials\nValidates a message packet using the entire ratchet’s …\nValidates in-place when the header + payload have already …\nReturns byte representation of self\nVerifies the target security level, returning the …\nReturns the version\nSets the backend used to synchronize client account …\nDefault: Firesaber + AES_GCM_256_SIV\nLoads a custom list of certs into the acceptable …\nDefault: HeaderObfuscatorSettings::Disabled\nThe client will skip unconditionally server certificate …\nSets the desired settings for the <code>KernelExecutor</code>\nDetermines the maximum number of concurrent asynchronous …\nLoads the accepted cert chain stored by the local …\nDefines the node type. By default, Peer is used. If a …\nThe file should be a DER formatted certificate\nSets the session secrecy mode. If Perfect is selected, …\nSets the maximum security level for the session, allowing …\nAttaches custom Argon settings for password hashing at the …\nSets the header obfuscator settings for the server\nAttaches miscellaneous server settings (e.g., transient …\nSets the pre-shared key for the server. Only a server …\nSpecifies custom STUN servers. If left unspecified, will …\nSets the underlying protocol for the server Default: TLS …\nUser CID\nList of failed invitations\nList of group keys\nCIDs of initial members\nCIDs of members to add\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key\nGroup key (optional)\nGroup key\nGroup key\nGroup key\nCIDs of members to kick\nResponse message\nMessage payload\nGroup configuration options\nResult of the request\nSender CID\nSender CID\nSender CID\nNew member state\nSuccess status\nSuccess status\nSuccess status\nSuccess status\nSuccess status\nSuccess status\nTarget CID\nTarget CID\nOnly existent if the new_register constructor is called. …\nFull name or alternative moniker\nPassword (hashed)\nUsername of the client\nContains the elements required to communicate with the …\nEndows the NodeRemote with additional functions\nSome functions require that a target exists\nContains the elements entailed by a successful registration\nConnects with custom settings Returns a ticket which is …\nConnects to the target peer with default settings\nConnects to the peer with custom settings\nConnects with the default settings If FCM keys were …\nDeregisters the currently locked target. If the target is …\nCreates a valid target identifier used to make protocol …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a list of mutually-registered peers with the …\nReturns a list of local group peers on the network for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the locked target is registered\nLists all groups that which the current peer owns\nCreates a proposed target from the valid local user to an …\nRegisters with custom settings Returns a ticket which is …\nPosts a registration request to a peer\nRegisters using the default settings. The default uses No …\nBegins a re-key, updating the container in the process. …\nDeletes the file from the RE-VFS. If the contents are …\nPulls a virtual file from the RE-VFS. If <code>delete_on_pull</code> is …\nSends a file to the provided target using the default …\nSends a file to the provided target using custom chunking …\nSends a file to the provided target using the default …\nSends a file with a custom size. The smaller the chunks, …\nContains the Google auth minted at the central server (if …\nSplits the channel into a send and receive half. This will …\nOnly available if UdpMode was enabled at the beginning of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nObtains a receiver which yields incoming file/object …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven a group invite signal, this function sends a …\nGiven the <code>input_signal</code> from the peer, this function sends …\nGiven the <code>input_signal</code> from the peer, this function sends …")