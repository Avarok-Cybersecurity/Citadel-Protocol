(function() {
    var type_impls = Object.fromEntries([["citadel_sdk",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-NodeBuilder%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#73-90\">Source</a><a href=\"#impl-Default-for-NodeBuilder%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"citadel_sdk/prelude/trait.Ratchet.html\" title=\"trait citadel_sdk::prelude::Ratchet\">Ratchet</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"citadel_sdk/prelude/struct.NodeBuilder.html\" title=\"struct citadel_sdk::prelude::NodeBuilder\">NodeBuilder</a>&lt;R&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#74-89\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.88.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","citadel_sdk::builder::node_builder::DefaultNodeBuilder","citadel_sdk::builder::node_builder::LightweightNodeBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NodeBuilder%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#134-391\">Source</a><a href=\"#impl-NodeBuilder%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"citadel_sdk/prelude/trait.Ratchet.html\" title=\"trait citadel_sdk::prelude::Ratchet\">Ratchet</a> + ContextRequirements&gt; <a class=\"struct\" href=\"citadel_sdk/prelude/struct.NodeBuilder.html\" title=\"struct citadel_sdk::prelude::NodeBuilder\">NodeBuilder</a>&lt;R&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#136-209\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.build\" class=\"fn\">build</a>&lt;'a, 'b: 'a, K: <a class=\"trait\" href=\"citadel_sdk/prelude/trait.NetKernel.html\" title=\"trait citadel_sdk::prelude::NetKernel\">NetKernel</a>&lt;R&gt; + 'b&gt;(\n    &amp;'a mut self,\n    kernel: K,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"struct\" href=\"citadel_sdk/prelude/struct.NodeFuture.html\" title=\"struct citadel_sdk::prelude::NodeFuture\">NodeFuture</a>&lt;'b, K&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a future that represents the both the protocol and kernel execution</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_node_type\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#218-221\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_node_type\" class=\"fn\">with_node_type</a>(&amp;mut self, node_type: <a class=\"enum\" href=\"citadel_sdk/prelude/enum.NodeType.html\" title=\"enum citadel_sdk::prelude::NodeType\">NodeType</a>) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Defines the node type. By default, Peer is used. If a server is desired, a bind address is expected</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>citadel_sdk::prelude::DefaultNodeBuilder;\n<span class=\"kw\">use </span>citadel_proto::prelude::NodeType;\n\nDefaultNodeBuilder::default().with_node_type(NodeType::server(<span class=\"string\">\"0.0.0.0:25021\"</span>).unwrap());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_backend\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#226-229\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_backend\" class=\"fn\">with_backend</a>(&amp;mut self, backend_type: <a class=\"enum\" href=\"citadel_sdk/prelude/enum.BackendType.html\" title=\"enum citadel_sdk::prelude::BackendType\">BackendType</a>) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Sets the backend used to synchronize client account information. By default, uses the filesystem.\nWhen the enterprise feature is set, a SQL database (MySQL, PostgreSQL, SQLite) is available. Using a single SQL cluster can be used in combination with\na cluster of load-balancing running [‘NetKernel’]’s on different IPs to construct scaled applications</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_kernel_executor_settings\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#232-238\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_kernel_executor_settings\" class=\"fn\">with_kernel_executor_settings</a>(\n    &amp;mut self,\n    kernel_executor_settings: <a class=\"struct\" href=\"citadel_sdk/prelude/struct.KernelExecutorSettings.html\" title=\"struct citadel_sdk::prelude::KernelExecutorSettings\">KernelExecutorSettings</a>,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Sets the desired settings for the <a href=\"citadel_sdk/prelude/struct.KernelExecutor.html\" title=\"struct citadel_sdk::prelude::KernelExecutor\"><code>KernelExecutor</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_server_argon_settings\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#241-247\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_server_argon_settings\" class=\"fn\">with_server_argon_settings</a>(\n    &amp;mut self,\n    settings: <a class=\"struct\" href=\"citadel_sdk/prelude/struct.ArgonDefaultServerSettings.html\" title=\"struct citadel_sdk::prelude::ArgonDefaultServerSettings\">ArgonDefaultServerSettings</a>,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Attaches custom Argon settings for password hashing at the server</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_server_misc_settings\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#258-261\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_server_misc_settings\" class=\"fn\">with_server_misc_settings</a>(\n    &amp;mut self,\n    misc_settings: <a class=\"struct\" href=\"citadel_sdk/prelude/struct.ServerMiscSettings.html\" title=\"struct citadel_sdk::prelude::ServerMiscSettings\">ServerMiscSettings</a>,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Attaches miscellaneous server settings (e.g., transient mode, credential requirements)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_underlying_protocol\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#281-284\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_underlying_protocol\" class=\"fn\">with_underlying_protocol</a>(\n    &amp;mut self,\n    proto: <a class=\"enum\" href=\"citadel_sdk/prelude/enum.ServerUnderlyingProtocol.html\" title=\"enum citadel_sdk::prelude::ServerUnderlyingProtocol\">ServerUnderlyingProtocol</a>,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Sets the underlying protocol for the server\nDefault: TLS transport w/ self-signed cert</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_native_certs\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#300-306\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_native_certs\" class=\"fn\">with_native_certs</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section></summary><div class=\"docblock\"><p>Loads the accepted cert chain stored by the local operating system\nIf a custom set of certs is required, run <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#method.with_custom_certs\" title=\"method citadel_sdk::prelude::NodeBuilder::with_custom_certs\"><code>Self::with_custom_certs</code></a>\nThis is the default if no [<code>RustlsClientConfig</code>] is specified</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_insecure_skip_cert_verification\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#310-313\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_insecure_skip_cert_verification\" class=\"fn\">with_insecure_skip_cert_verification</a>(&amp;mut self) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>The client will skip unconditionally server certificate verification\nThis is not recommended</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_custom_certs\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#317-324\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_custom_certs\" class=\"fn\">with_custom_certs</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.u8.html\">u8</a>]&gt;&gt;(\n    &amp;mut self,\n    custom_certs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section></summary><div class=\"docblock\"><p>Loads a custom list of certs into the acceptable certificate list. Connections that present server certificates\nthat are outside of this list during the handshake process are refused</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_pem_file\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#328-340\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_pem_file\" class=\"fn\">with_pem_file</a>&lt;P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>&gt;&gt;(\n    &amp;mut self,\n    path: P,\n) -&gt; <a class=\"type\" href=\"https://docs.rs/anyhow/1.0.98/anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;&amp;mut Self&gt;</h4></section></summary><div class=\"docblock\"><p>The file should be a DER formatted certificate</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_stun_servers\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#343-346\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_stun_servers\" class=\"fn\">with_stun_servers</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;&gt;(\n    &amp;mut self,\n    servers: S,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Specifies custom STUN servers. If left unspecified, will use the defaults (twilio and Google STUN servers)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_server_password\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#352-357\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_server_password\" class=\"fn\">with_server_password</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"citadel_sdk/prelude/struct.PreSharedKey.html\" title=\"struct citadel_sdk::prelude::PreSharedKey\">PreSharedKey</a>&gt;&gt;(\n    &amp;mut self,\n    password: T,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Sets the pre-shared key for the server. Only a server should set this value\nIf no value is set, any client can connect to the server. If a pre-shared key\nis specified, the client must have the matching pre-shared key in order to\nregister and connect with the server.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_server_declared_header_obfuscation\" class=\"method\"><a class=\"src rightside\" href=\"src/citadel_sdk/builder/node_builder.rs.html#360-369\">Source</a><h4 class=\"code-header\">pub fn <a href=\"citadel_sdk/prelude/struct.NodeBuilder.html#tymethod.with_server_declared_header_obfuscation\" class=\"fn\">with_server_declared_header_obfuscation</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"citadel_sdk/prelude/enum.HeaderObfuscatorSettings.html\" title=\"enum citadel_sdk::prelude::HeaderObfuscatorSettings\">HeaderObfuscatorSettings</a>&gt;&gt;(\n    &amp;mut self,\n    header_obfuscator_settings: T,\n) -&gt; &amp;mut Self</h4></section></summary><div class=\"docblock\"><p>Sets the header obfuscator settings for the server</p>\n</div></details></div></details>",0,"citadel_sdk::builder::node_builder::DefaultNodeBuilder","citadel_sdk::builder::node_builder::LightweightNodeBuilder"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[15535]}