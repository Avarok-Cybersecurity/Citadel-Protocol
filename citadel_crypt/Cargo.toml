[package]
name = "citadel_crypt"
version = "0.7.0"
authors = ["Thomas Braun <thomas.braun@avarok.net>"]
description = "Higher-level cryptographic library for the Citadel Protocol"
edition = "2021"
workspace = ".."
homepage = "https://avarok.net/"
repository = "https://github.com/Avarok-Cybersecurity/Citadel-Protocol"
readme = "../README.md"
categories = ["cryptography", "quantum", "network-programming", "asynchronous"]
license = "MIT OR Apache-2.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

exclude = [
    "./target/*"
]

[features]
default = ["filesystem", "std"]
filesystem = []
std = [
    "citadel_pqcrypto/std",
    "byteorder/std",
    "rand/std",
    "tokio/default",
    "citadel_io/std",
    "rust-argon2/default"
]
wasm = [
    "citadel_pqcrypto/wasm",
    "citadel_io/wasm"
]

[dependencies]
async-trait = { workspace = true }
bincode2 = { workspace = true }
serde = { workspace = true, features=["rc", "derive"] }
futures = { workspace = true }
log = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
num-integer = { workspace = true }
rand = { workspace = true }
arrayvec = { workspace = true, features = ["serde"] }
citadel_pqcrypto = { workspace = true }
citadel_io = { workspace = true }
bitvec = { workspace = true, features = ["alloc"] }
serde-big-array = { workspace = true }
rust-argon2 = { workspace = true, features = ["serde"] }
tokio = { workspace = true, features = ["rt", "macros", "time"] }
sha3 = { workspace = true }
tokio-stream = { workspace = true }
auto_impl = { workspace = true }
zeroize = { workspace = true, features = ["zeroize_derive", "alloc", "serde"] }

[target.'cfg(target_family = "unix")'.dependencies]
libc = { workspace = true }

[target.'cfg(target_family = "windows")'.dependencies]
kernel32-sys = { workspace = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
rayon = { workspace = true }
sysinfo = { workspace = true }
num_cpus = { workspace = true }

[dev-dependencies]
citadel_logging = { workspace = true }
rstest = { workspace = true }

[lib]
doctest = false
