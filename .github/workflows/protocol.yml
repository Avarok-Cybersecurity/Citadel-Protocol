name: Lusna Protocol
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  TESTING_SQL_SERVER_ADDR: "mysql://root:password@localhost/db0"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 80
    steps:
      - uses: mirromutth/mysql-action@v1.1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          mysql version: '8.0'
          mysql database: 'db0'
          mysql root password: password
#      - uses: ankane/setup-mysql@v1
#        with:
#          database: db0
#      - uses: ankane/setup-postgres@v1
#        with:
#          postgres-version: 14
      - name: Install LLVM and Clang
        if: startsWith(matrix.os, 'windows')
        uses: KyleMayes/install-llvm-action@v1.5.0
        with:
          version: "13.0"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        if: startsWith(matrix.os, 'windows')
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV

      - name: Install OpenSSL
        if: startsWith(matrix.os, 'windows')
        run: choco install openssl --limit-output

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'windows')
        run: echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $env:GITHUB_ENV

      - name: Set OPENSSL_ROOT_DIR
        if: startsWith(matrix.os, 'macos')
        run: echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV
        
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v1
      - name: Run user library + SQL backend
        if: startsWith(matrix.os, 'ubuntu')
        run: cargo test --package hyxe_user --features enterprise
#      - run: cargo install --locked cargo-deny && cargo deny init && cargo deny check advisories bans sources
      - run: cargo test --package ez_pqcrypto
      - run: cargo test --package hyxe_crypt
      - run: cargo test --package hyxe_fs
      - run: cargo clean
      - run: cargo test --package hyxe_net --features single-threaded,localhost-testing
      - run: cargo clean
      - run: cargo test --package hyxe_net --features multi-threaded,localhost-testing
