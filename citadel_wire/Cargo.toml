[package]
name = "citadel_wire"
version = "0.13.0"
authors = ["Thomas Braun <thomas.braun@avarok.net>"]
description = "NAT traversal and wire support for the Citadel Protocol"
edition = "2021"
workspace = ".."
homepage = "https://avarok.net/"
repository = "https://github.com/Avarok-Cybersecurity/Citadel-Protocol"
readme = "../README.md"
categories = ["cryptography", "network-programming", "asynchronous"]
license = "MIT OR Apache-2.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["std"]
std = [
    "netbeam/std",
    "citadel_io/std",
    "openssl/default",
    "quinn/default",
    "serde/std",
    "async_ip/std",
    "rustls-pemfile/std",
]
localhost-testing = ["tracing"]
wasm = ["citadel_io/wasm", "netbeam/wasm"]
vendored = ["openssl/vendored"]

[dependencies]
futures = { workspace = true }
async-trait-with-sync = { workspace = true }
bytes = { workspace = true }
citadel_io = { workspace = true }
anyhow = { workspace = true }
serde = { workspace = true, features = ["derive"] }
log = { workspace = true }
bincode = { workspace = true }
async_ip = { workspace = true }
itertools = { workspace = true, features = ["use_alloc", "use_std"] }
either = { workspace = true }
netbeam = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }
tracing = { workspace = true, optional = true, features = ["attributes"] }
rustls = { workspace = true }
socket2 = { workspace = true, features = ["all"] }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
quinn = { workspace = true, features = ["rustls"] }
openssl = { workspace = true }
rustls-native-certs = { workspace = true }
igd = { workspace = true, features = ["aio"] }
stun = { workspace = true }
rcgen = { workspace = true, features = ["pem", "crypto", "ring"] }
rustls-pemfile = { workspace = true }
tokio-rustls = { workspace = true }

[target.'cfg(target_family = "wasm")'.dependencies]

[dev-dependencies]
citadel_logging = { workspace = true }
rand = "0.8.5"
rstest = { workspace = true }

[lib]
doctest = false
